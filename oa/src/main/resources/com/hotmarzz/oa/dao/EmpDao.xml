<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hotmarzz.oa.dao.EmpDao">
	<sql id="empCol">
		empid,empname,username,userpwd,phone,hiredate,e.schoolid aid1,e.roleid er,
		assowechat,e.createuser,e.createdate,e.updateuser,e.updatedate,sex
	</sql>
	<sql id="roleCol">
		r.roleid rr,r.rolename
	</sql>
	<sql id="slsCol">
		sls.SCHOOLID aid2,sls.SCHOOLNAME,sls.PROVINCE
	</sql>
	
	<!-- 添加了role权限的字段 -->
	<sql id="empCol_role">
		<include refid="com.hotmarzz.oa.dao.EmpDao.empCol"></include>,
		<include refid="com.hotmarzz.oa.dao.EmpDao.roleCol"></include>
	</sql>
	<!-- 登陆专用 -->
	<sql id="empCol_role_school">
		<include refid="com.hotmarzz.oa.dao.EmpDao.empCol"></include>,
		<include refid="com.hotmarzz.oa.dao.EmpDao.roleCol"></include>,
		<include refid="com.hotmarzz.oa.dao.EmpDao.slsCol"></include>
	</sql>
	
	<select id="getListPage" parameterType="baseQuery" resultMap="empMap">
		select 
		<include refid="com.hotmarzz.oa.dao.EmpDao.empCol_role"/>
		from o_emp e left outer join o_role r
		on e.roleid=r.roleid
		<include refid="com.hotmarzz.basic.dao.BaseDao.queryByConditions"/>
		<include refid="com.hotmarzz.basic.dao.BaseDao.queryByOrders"/>
	</select>
	
	<select id="getById" parameterType="baseQuery" resultType="emp">
		select 
		<include refid="com.hotmarzz.oa.dao.EmpDao.empCol"/>
		from o_emp e
		where empid=#{emp.empId,jdbcType=NUMERIC}
	</select>
	
	<select id="login" parameterType="emp" resultMap="empMap">
		select 
		<include refid="com.hotmarzz.oa.dao.EmpDao.empCol_role_school"/>
		from
		o_emp e join
		o_schooldistrict sls on e.schoolid=sls.schoolid join
		o_role r on e.roleid=r.roleid
		where
		userName=#{userName,jdbcType=VARCHAR} and userpwd=#{userPwd,jdbcType=VARCHAR}
	</select>
	
	<resultMap type="Emp" id="empMap">
		<id column="empid" property="empId"/>
		<result column="empname" property="empName"/>
		<result column="username" property="userName"/>
		<result column="userpwd" property="userPwd"/>
		<result column="phone" property="phone"/>
		<result column="hiredate" property="hiredate"/>
<!-- 		<result column="deptid" property="dept"/> -->
<!-- 		<result column="stationid" property="station"/> -->
		<result column="assoWeChat" property="assoWeChat"/>
		<result column="sex" property="sex"/>
		<result column="createUser" property="createUser"/>
		<result column="createDate" property="createDate"/>
		<result column="updateUser" property="updateUser"/>
		<result column="updateDate" property="updateDate"/>
		
		<!-- 校区 -->
		<association property="schoolDistrict" column="aid1" javaType="com.hotmarzz.oa.pojo.SchoolDistrict">
			<id column="aid2" property="schoolId"/>
			<result column="schoolName" property="schoolName"/>
			<result column="province" property="province"/>
		</association>
		<!-- 角色 -->
		<association property="role" column="er" javaType="com.hotmarzz.oa.pojo.Role">
			<id column="rr" property="roleId"/>
			<result column="rolename" property="roleName"/>
		</association>
	</resultMap>
	
	
	<select id="getCount" parameterType="baseQuery" resultType="int">
		<include refid="com.hotmarzz.basic.dao.BaseDao.count"/> 
		o_emp e left outer join o_role r on e.roleid=r.roleid
		<include refid="com.hotmarzz.basic.dao.BaseDao.queryByConditions"/>
	</select>
	
	<insert id="insert">
		<selectKey keyProperty="empId" order="BEFORE" resultType="long">
			select o_emp_seq.nextval from dual
		</selectKey>
		insert into o_emp values(
			#{empId,jdbcType=NUMERIC},
			#{empName,jdbcType=VARCHAR},
			#{userName,jdbcType=VARCHAR},
			#{userPwd,jdbcType=VARCHAR},
			#{phone,jdbcType=VARCHAR},
			#{hiredate,jdbcType=DATE},
			<if test="schoolDistrict !=null">
				#{schoolDistrict.schoolId,jdbcType=NUMERIC},
			</if>
			<if test="schoolDistrict ==null">
				null,
			</if>
			<if test="dept !=null">
				#{dept.deptId,jdbcType=NUMERIC},
			</if>
			<if test="dept ==null">
				null,
			</if>
			<if test="role !=null">
				#{role.roleId,jdbcType=NUMERIC},
			</if>
			<if test="role ==null">
				null,
			</if>
			<if test="station !=null">
				#{station.stationId,jdbcType=NUMERIC},
			</if>
			<if test="station ==null">
				null,
			</if>
			#{assoWeChat,jdbcType=NUMERIC},
			#{createUser,jdbcType=VARCHAR},
			#{createDate,jdbcType=TIMESTAMP },
			#{updateUser,jdbcType=VARCHAR},
			#{updateDate,jdbcType=TIMESTAMP},
			#{sex,jdbcType=NUMERIC}
		)
	</insert>
	
	<!-- 删除员工信息 -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from o_emp where empid=#{empId,jdbcType=NUMERIC}
	</delete>
	
	<update id="update" parameterType="emp">
		update o_emp set empname=#{empName,jdbcType=VARCHAR},username=#{userName,jdbcType=VARCHAR},
		phone=#{phone,jdbcType=VARCHAR},hiredate=#{hiredate,jdbcType=DATE} where empid=#{empId,jdbcType=NUMERIC}
	</update>
	
	<select id="ckOldPwd" parameterType="emp" resultType="emp">
		select 
		<include refid="com.hotmarzz.oa.dao.EmpDao.empCol"/>
		from o_emp e
		where empid=#{empId,jdbcType=NUMERIC} and userpwd=#{userPwd,jdbcType=VARCHAR}
	</select>
	
	<update id="updatePwd" parameterType="emp">
		update o_emp set userpwd=#{userPwd,jdbcType=VARCHAR} where empid=#{empId,jdbcType=NUMERIC}
	</update>
</mapper>
